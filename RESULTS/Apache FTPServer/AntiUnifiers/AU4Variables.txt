Theta1 = {V1 -> delete, V2 -> name, V3 -> FtpException, V4 -> variableDeclarationStatement(simpleType(String),fragments(variableDeclarationFragment(simpleName(sql),methodInvocation(simpleName(StringUtils),simpleName(replaceString),arguments(simpleName(deleteUserStmt),simpleName(map)))))), V5 -> variableDeclarationStatement(parameterizedType(simpleType(HashMap),typeArguments(simpleType(String),simpleType(Object))),fragments(variableDeclarationFragment(simpleName(map),classInstanceCreation(parameterizedType(simpleType(HashMap),typeArguments(simpleType(String),simpleType(Object))))))), V6 -> methodInvocation(simpleName(map),simpleName(put),arguments(simpleName(ATTR_LOGIN),methodInvocation(simpleName(escapeString),arguments(simpleName(name))))), V7 -> NIL, V8 -> NIL, V9 -> primitiveType(void)}

Theta2 = {V1 -> messageReceived, V2 -> message, V3 -> Exception, V4 -> variableDeclarationStatement(simpleType(String),fragments(variableDeclarationFragment(simpleName(request),castExpression(simpleType(String),simpleName(message))))), V5 -> NIL, V6 -> NIL, V7 -> NIL, V8 -> NIL, V9 -> primitiveType(void)}

Theta3 = {V1 -> selectUserByName, V2 -> name, V3 -> Exception, V4 -> variableDeclarationStatement(simpleType(String),fragments(variableDeclarationFragment(simpleName(sql),methodInvocation(simpleName(StringUtils),simpleName(replaceString),arguments(simpleName(selectUserStmt),simpleName(map)))))), V5 -> variableDeclarationStatement(parameterizedType(simpleType(HashMap),typeArguments(simpleType(String),simpleType(Object))),fragments(variableDeclarationFragment(simpleName(map),classInstanceCreation(parameterizedType(simpleType(HashMap),typeArguments(simpleType(String),simpleType(Object))))))), V6 -> methodInvocation(simpleName(map),simpleName(put),arguments(simpleName(ATTR_LOGIN),methodInvocation(simpleName(escapeString),arguments(simpleName(name))))), V7 -> variableDeclarationStatement(simpleType(ResultSet),fragments(variableDeclarationFragment(simpleName(rs),nullLiteral()))), V8 -> tryStatement(block(statements(assignment(simpleName(stmt),operator(=),methodInvocation(methodInvocation(simpleName(createConnection)),simpleName(createStatement))),assignment(simpleName(rs),operator(=),methodInvocation(simpleName(stmt),simpleName(executeQuery),arguments(simpleName(sql)))),variableDeclarationStatement(simpleType(BaseUser),fragments(variableDeclarationFragment(simpleName(thisUser),nullLiteral()))),ifStatement(methodInvocation(simpleName(rs),simpleName(next)),block(statements(assignment(simpleName(thisUser),operator(=),classInstanceCreation(simpleType(BaseUser))),methodInvocation(simpleName(thisUser),simpleName(setName),arguments(methodInvocation(simpleName(rs),simpleName(getString),arguments(simpleName(ATTR_LOGIN))))),methodInvocation(simpleName(thisUser),simpleName(setPassword),arguments(methodInvocation(simpleName(rs),simpleName(getString),arguments(simpleName(ATTR_PASSWORD))))),methodInvocation(simpleName(thisUser),simpleName(setHomeDirectory),arguments(methodInvocation(simpleName(rs),simpleName(getString),arguments(simpleName(ATTR_HOME))))),methodInvocation(simpleName(thisUser),simpleName(setEnabled),arguments(methodInvocation(simpleName(rs),simpleName(getBoolean),arguments(simpleName(ATTR_ENABLE))))),methodInvocation(simpleName(thisUser),simpleName(setMaxIdleTime),arguments(methodInvocation(simpleName(rs),simpleName(getInt),arguments(simpleName(ATTR_MAX_IDLE_TIME))))),variableDeclarationStatement(parameterizedType(simpleType(List),typeArguments(simpleType(Authority))),fragments(variableDeclarationFragment(simpleName(authorities),classInstanceCreation(parameterizedType(simpleType(ArrayList),typeArguments(simpleType(Authority))))))),ifStatement(methodInvocation(simpleName(rs),simpleName(getBoolean),arguments(simpleName(ATTR_WRITE_PERM))),block(statements(methodInvocation(simpleName(authorities),simpleName(add),arguments(classInstanceCreation(simpleType(WritePermission))))))),methodInvocation(simpleName(authorities),simpleName(add),arguments(classInstanceCreation(simpleType(ConcurrentLoginPermission),arguments(methodInvocation(simpleName(rs),simpleName(getInt),arguments(simpleName(ATTR_MAX_LOGIN_NUMBER))),methodInvocation(simpleName(rs),simpleName(getInt),arguments(simpleName(ATTR_MAX_LOGIN_PER_IP))))))),methodInvocation(simpleName(authorities),simpleName(add),arguments(classInstanceCreation(simpleType(TransferRatePermission),arguments(methodInvocation(simpleName(rs),simpleName(getInt),arguments(simpleName(ATTR_MAX_DOWNLOAD_RATE))),methodInvocation(simpleName(rs),simpleName(getInt),arguments(simpleName(ATTR_MAX_UPLOAD_RATE))))))),methodInvocation(simpleName(thisUser),simpleName(setAuthorities),arguments(simpleName(authorities)))))),returnStatement(simpleName(thisUser)))),block(statements(methodInvocation(simpleName(closeQuitely),arguments(simpleName(rs))),methodInvocation(simpleName(closeQuitely),arguments(simpleName(stmt)))))), V9 -> NIL}

Theta4 = {V1 -> sessionIdle, V2 -> session, V3 -> Exception, V4 -> NIL, V5 -> NIL, V6 -> methodInvocation(methodInvocation(simpleName(session),simpleName(close),arguments(booleanLiteral(false))),simpleName(awaitUninterruptibly),arguments(numberLiteral(10000))), V7 -> NIL, V8 -> NIL, V9 -> primitiveType(void)}

