********************************  NODE 1  *******************************
static class RecentHandler extends HandlerBase {
  public void endDocument() throws java.lang.Exception {
    int max=jEdit.getIntegerProperty("recentFiles",50);
    while (history.size() > max)     history.removeLast();
  }
  public Object resolveEntity(  String publicId,  String systemId){
    if ("recent.dtd".equals(systemId)) {
      return new StringReader("<!-- -->");
    }
    return null;
  }
  public void doctypeDecl(  String name,  String publicId,  String systemId) throws Exception {
    if ("RECENT".equals(name))     return;
    Log.log(Log.ERROR,this,"recent.xml: DOCTYPE must be RECENT");
  }
  public void endElement(  String name){
    if (name.equals("ENTRY")) {
      history.addLast(new Entry(path,caret,selection,encoding));
      path=null;
      caret=0;
      selection=null;
      encoding=null;
    }
 else     if (name.equals("PATH"))     path=charData;
 else     if (name.equals("CARET"))     caret=Integer.parseInt(charData);
 else     if (name.equals("SELECTION"))     selection=charData;
 else     if (name.equals("ENCODING"))     encoding=charData;
  }
  public void charData(  char[] ch,  int start,  int length){
    charData=new String(ch,start,length);
  }
  private String path;
  private int caret;
  private String selection;
  private String encoding;
  private String charData;
}
********************************  NODE 2  *******************************
static class RecentHandler extends HandlerBase {
  public void endDocument() throws java.lang.Exception {
    int max=jEdit.getIntegerProperty("recentFiles",50);
    while (history.size() > max)     history.removeLast();
  }
  public Object resolveEntity(  String publicId,  String systemId){
    if ("recent.dtd".equals(systemId)) {
      return new StringReader("<!-- -->");
    }
    return null;
  }
  public void doctypeDecl(  String name,  String publicId,  String systemId) throws Exception {
    if ("RECENT".equals(name))     return;
    Log.log(Log.ERROR,this,"recent.xml: DOCTYPE must be RECENT");
  }
  public void endElement(  String name){
    if (name.equals("ENTRY")) {
      history.addLast(new Entry(path,caret,selection,encoding));
      path=null;
      caret=0;
      selection=null;
      encoding=null;
    }
 else     if (name.equals("PATH"))     path=charData;
 else     if (name.equals("CARET"))     caret=Integer.parseInt(charData);
 else     if (name.equals("SELECTION"))     selection=charData;
 else     if (name.equals("ENCODING"))     encoding=charData;
  }
  public void charData(  char[] ch,  int start,  int length){
    charData=new String(ch,start,length);
  }
  private String path;
  private int caret;
  private String selection;
  private String encoding;
  private String charData;
}
*****************************  ANTIUNIFIER  ****************************
TYPES[MODIFIERS[KEYWORD[static]] ; INTERFACE[false] ; NAME[IDENTIFIER[RecentHandler]] ; SUPERCLASSTYPE[NAME[IDENTIFIER[HandlerBase]]] ; BODYDECLARATIONS[MODIFIERS[KEYWORD[public]] ; CONSTRUCTOR[false] ; RETURNTYPE2[PRIMITIVETYPECODE[void]] ; NAME[IDENTIFIER[doctypeDecl]] ; PARAMETERS[TYPE[NAME[IDENTIFIER[String]]] ; VARARGS[false] ; NAME[IDENTIFIER[name]] ; EXTRADIMENSIONS[0], TYPE[NAME[IDENTIFIER[String]]] ; VARARGS[false] ; NAME[IDENTIFIER[publicId]] ; EXTRADIMENSIONS[0], TYPE[NAME[IDENTIFIER[String]]] ; VARARGS[false] ; NAME[IDENTIFIER[systemId]] ; EXTRADIMENSIONS[0]] ; EXTRADIMENSIONS[0] ; THROWNEXCEPTIONS[IDENTIFIER[Exception]] ; BODY[STATEMENTS[EXPRESSION[EXPRESSION[IDENTIFIER[Log]] ; NAME[IDENTIFIER[log]] ; ARGUMENTS[ESCAPEDVALUE["recent.xml: DOCTYPE must be RECENT"], QUALIFIER[IDENTIFIER[Log]] ; NAME[IDENTIFIER[ERROR]], ]], EXPRESSION[EXPRESSION[ESCAPEDVALUE["RECENT"]] ; NAME[IDENTIFIER[equals]] ; ARGUMENTS[IDENTIFIER[name]]] ; ]], MODIFIERS[KEYWORD[public]] ; CONSTRUCTOR[false] ; RETURNTYPE2[PRIMITIVETYPECODE[void]] ; NAME[IDENTIFIER[charData]] ; PARAMETERS[TYPE[COMPONENTTYPE[PRIMITIVETYPECODE[char]]] ; VARARGS[false] ; NAME[IDENTIFIER[ch]] ; EXTRADIMENSIONS[0], TYPE[PRIMITIVETYPECODE[int]] ; VARARGS[false] ; NAME[IDENTIFIER[start]] ; EXTRADIMENSIONS[0], TYPE[PRIMITIVETYPECODE[int]] ; VARARGS[false] ; NAME[IDENTIFIER[length]] ; EXTRADIMENSIONS[0]] ; EXTRADIMENSIONS[0] ; BODY[STATEMENTS[EXPRESSION[LEFTHANDSIDE[IDENTIFIER[charData]] ; OPERATOR[=] ; RIGHTHANDSIDE[TYPE[NAME[IDENTIFIER[String]]] ; ARGUMENTS[IDENTIFIER[ch], IDENTIFIER[start], IDENTIFIER[length]]]]]], MODIFIERS[KEYWORD[public]] ; CONSTRUCTOR[false] ; RETURNTYPE2[NAME[IDENTIFIER[Object]]] ; NAME[IDENTIFIER[resolveEntity]] ; PARAMETERS[TYPE[NAME[IDENTIFIER[String]]] ; VARARGS[false] ; NAME[IDENTIFIER[publicId]] ; EXTRADIMENSIONS[0], TYPE[NAME[IDENTIFIER[String]]] ; VARARGS[false] ; NAME[IDENTIFIER[systemId]] ; EXTRADIMENSIONS[0]] ; EXTRADIMENSIONS[0] ; BODY[STATEMENTS[EXPRESSION[EXPRESSION[ESCAPEDVALUE["recent.dtd"]] ; NAME[IDENTIFIER[equals]] ; ARGUMENTS[IDENTIFIER[systemId]]] ; THENSTATEMENT[STATEMENTS[EXPRESSION[TYPE[NAME[IDENTIFIER[StringReader]]] ; ARGUMENTS[ESCAPEDVALUE["<!-- -->"]]]]], ]], MODIFIERS[KEYWORD[public]] ; CONSTRUCTOR[false] ; RETURNTYPE2[PRIMITIVETYPECODE[void]] ; NAME[IDENTIFIER[endElement]] ; PARAMETERS[TYPE[NAME[IDENTIFIER[String]]] ; VARARGS[false] ; NAME[IDENTIFIER[name]] ; EXTRADIMENSIONS[0]] ; EXTRADIMENSIONS[0] ; BODY[STATEMENTS[EXPRESSION[EXPRESSION[IDENTIFIER[name]] ; NAME[IDENTIFIER[equals]] ; ARGUMENTS[ESCAPEDVALUE["ENTRY"]]] ; THENSTATEMENT[STATEMENTS[EXPRESSION[EXPRESSION[IDENTIFIER[history]] ; NAME[IDENTIFIER[addLast]] ; ARGUMENTS[TYPE[NAME[IDENTIFIER[Entry]]] ; ARGUMENTS[IDENTIFIER[path], IDENTIFIER[caret], IDENTIFIER[selection], IDENTIFIER[encoding]]]], EXPRESSION[LEFTHANDSIDE[IDENTIFIER[path]] ; OPERATOR[=] ; ], EXPRESSION[LEFTHANDSIDE[IDENTIFIER[caret]] ; OPERATOR[=] ; RIGHTHANDSIDE[TOKEN[0]]], EXPRESSION[LEFTHANDSIDE[IDENTIFIER[selection]] ; OPERATOR[=] ; ], EXPRESSION[LEFTHANDSIDE[IDENTIFIER[encoding]] ; OPERATOR[=] ; ]]] ; ELSESTATEMENT[EXPRESSION[EXPRESSION[IDENTIFIER[name]] ; NAME[IDENTIFIER[equals]] ; ARGUMENTS[ESCAPEDVALUE["PATH"]]] ; THENSTATEMENT[EXPRESSION[LEFTHANDSIDE[IDENTIFIER[path]] ; OPERATOR[=] ; RIGHTHANDSIDE[IDENTIFIER[charData]]]] ; ELSESTATEMENT[EXPRESSION[EXPRESSION[IDENTIFIER[name]] ; NAME[IDENTIFIER[equals]] ; ARGUMENTS[ESCAPEDVALUE["CARET"]]] ; THENSTATEMENT[EXPRESSION[LEFTHANDSIDE[IDENTIFIER[caret]] ; OPERATOR[=] ; RIGHTHANDSIDE[EXPRESSION[IDENTIFIER[Integer]] ; NAME[IDENTIFIER[parseInt]] ; ARGUMENTS[IDENTIFIER[charData]]]]] ; ELSESTATEMENT[EXPRESSION[EXPRESSION[IDENTIFIER[name]] ; NAME[IDENTIFIER[equals]] ; ARGUMENTS[ESCAPEDVALUE["SELECTION"]]] ; THENSTATEMENT[EXPRESSION[LEFTHANDSIDE[IDENTIFIER[selection]] ; OPERATOR[=] ; RIGHTHANDSIDE[IDENTIFIER[charData]]]] ; ELSESTATEMENT[EXPRESSION[EXPRESSION[IDENTIFIER[name]] ; NAME[IDENTIFIER[equals]] ; ARGUMENTS[ESCAPEDVALUE["ENCODING"]]] ; THENSTATEMENT[EXPRESSION[LEFTHANDSIDE[IDENTIFIER[encoding]] ; OPERATOR[=] ; RIGHTHANDSIDE[IDENTIFIER[charData]]]]]]]]]], MODIFIERS[KEYWORD[public]] ; CONSTRUCTOR[false] ; RETURNTYPE2[PRIMITIVETYPECODE[void]] ; NAME[IDENTIFIER[endDocument]] ; EXTRADIMENSIONS[0] ; THROWNEXCEPTIONS[QUALIFIER[QUALIFIER[IDENTIFIER[java]] ; NAME[IDENTIFIER[lang]]] ; NAME[IDENTIFIER[Exception]]] ; BODY[STATEMENTS[TYPE[PRIMITIVETYPECODE[int]] ; FRAGMENTS[NAME[IDENTIFIER[max]] ; EXTRADIMENSIONS[0] ; INITIALIZER[EXPRESSION[IDENTIFIER[jEdit]] ; NAME[IDENTIFIER[getIntegerProperty]] ; ARGUMENTS[ESCAPEDVALUE["recentFiles"], TOKEN[50]]]], EXPRESSION[LEFTOPERAND[EXPRESSION[IDENTIFIER[history]] ; NAME[IDENTIFIER[size]] ; ] ; OPERATOR[>] ; RIGHTOPERAND[IDENTIFIER[max]] ; ] ; BODY[EXPRESSION[EXPRESSION[IDENTIFIER[history]] ; NAME[IDENTIFIER[removeLast]] ; ]]]], MODIFIERS[KEYWORD[private]] ; TYPE[NAME[IDENTIFIER[String]]] ; FRAGMENTS[NAME[IDENTIFIER[path]] ; EXTRADIMENSIONS[0]], MODIFIERS[KEYWORD[private]] ; TYPE[NAME[IDENTIFIER[String]]] ; FRAGMENTS[NAME[IDENTIFIER[selection]] ; EXTRADIMENSIONS[0]], MODIFIERS[KEYWORD[private]] ; TYPE[NAME[IDENTIFIER[String]]] ; FRAGMENTS[NAME[IDENTIFIER[encoding]] ; EXTRADIMENSIONS[0]], MODIFIERS[KEYWORD[private]] ; TYPE[NAME[IDENTIFIER[String]]] ; FRAGMENTS[NAME[IDENTIFIER[charData]] ; EXTRADIMENSIONS[0]], MODIFIERS[KEYWORD[private]] ; TYPE[PRIMITIVETYPECODE[int]] ; FRAGMENTS[NAME[IDENTIFIER[caret]] ; EXTRADIMENSIONS[0]]]]
****************************** SIMILARITY *****************************
1.0