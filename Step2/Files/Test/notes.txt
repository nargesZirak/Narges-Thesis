Files\Test\Results directory contains the output files created from anti-unification of the Java classes in Files\Test\logging.txt. Our test set contains 10 logged Java classes. 
There are multiple folders in Files\Test\Results directory each contains results from anti-unification of input seeds for each combination of Java classes in the test set. For example, output1-2 contains the results of anti-unification of the first Java class with the second one.
For Java classes containing more than one logging calls I split them into more than one case, where each contains one logging (all the other logging statements are deleted from seed). For example, imagine we have AST 1 and AST 2. AST 1 contains three logging calls and AST 2 contains two logging calls. As mentioned, we split AST 1 into AST 1a, AST 1b, and AST 1c. Also, we split AST 2 into AST 2a and AST 2b. I created an anti-unifier for each possible combination between these cases and then computed a measure of similarity for each case. For this case, 6 text files will be created where Output1-2.txt contains the anti-unifier created from AST 1a and AST2b.
Each Output text file contains two input seeds, anti-unified structure, and computed similarity value between these seeds.
Similarity text files orders the similarity value between each copy of AST1 with each copy of AST2 and order them based on the value of similarity. For example, similarity0 lists the similarity values for constructed anti-unifiers of AST1a-AST2a and AST1a-AST2b. The ID represent the containing structure of log statements inside the ASTs.

