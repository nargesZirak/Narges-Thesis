\addvspace {10pt}
\addvspace {10pt}
\addvspace {10pt}
\contentsline {figure}{\numberline {1.1}{\ignorespaces Logging call examples from the \textsf {\fontsize 10.95{13.6}\selectfont \abovedisplayskip 11\p@ plus3\p@ minus6\p@ \belowdisplayskip \abovedisplayskip \abovedisplayshortskip \z@ plus3\p@ \belowdisplayshortskip 6.5\p@ plus3.5\p@ minus3\p@ \def \leftmargin \leftmargini {\parsep 4.5\p@ plus 2\p@ minus 1\p@ \itemsep \parsep \topsep 9\p@ plus 3\p@ minus 5\p@ }log4j} framework.\relax }}{3}{figure.caption.12}
\addvspace {10pt}
\contentsline {figure}{\numberline {2.1}{\ignorespaces The \lstinline {EditBus} class.\relax }}{8}{figure.caption.13}
\contentsline {figure}{\numberline {2.2}{\ignorespaces The developer's initial determination of the usage of logging calls for the \lstinline {send(EBMessage)} method.\relax }}{9}{figure.caption.14}
\contentsline {figure}{\numberline {2.3}{\ignorespaces The developer's second determination of the usage of logging calls for the \lstinline {send(EBMessage)} method.\relax }}{9}{figure.caption.15}
\contentsline {figure}{\numberline {2.4}{\ignorespaces The developer's third determination of the usage of logging calls for the \lstinline {send(EBMessage)} method.\relax }}{11}{figure.caption.16}
\contentsline {figure}{\numberline {2.5}{\ignorespaces The developer's fourth determination of the usage of logging calls for the \lstinline {send(EBMessage)} method.\relax }}{11}{figure.caption.17}
\contentsline {figure}{\numberline {2.6}{\ignorespaces The developer's final determination of the usage of logging calls for the \lstinline {EditBus} class.\relax }}{12}{figure.caption.18}
\addvspace {10pt}
\contentsline {figure}{\numberline {3.1}{\ignorespaces The unification and antiunification of the terms $f(X,b)$ and $f(a,Y)$.\relax }}{16}{figure.caption.19}
\contentsline {figure}{\numberline {3.2}{\ignorespaces The antiunification of the terms $f(X,b)$ and $f(a,Y)$.\relax }}{17}{figure.caption.20}
\contentsline {figure}{\numberline {3.3}{\ignorespaces The higher-order antiunification of the terms $f(X,b)$ and $f(a,Y)$.\relax }}{17}{figure.caption.21}
\contentsline {figure}{\numberline {3.4}{\ignorespaces A Java class that uses a logging call. This will be referred to as Example 1.\relax }}{18}{figure.caption.22}
\contentsline {figure}{\numberline {3.5}{\ignorespaces A Java class that uses a logging call. This will be referred to as Example 2.\relax }}{18}{figure.caption.23}
\contentsline {figure}{\numberline {3.6}{\ignorespaces Simple AST structure of examples in Figures\nobreakspace {}\ref {ch3-ex1} and\nobreakspace {}\ref {ch3-ex2}.\relax }}{19}{figure.caption.24}
\contentsline {figure}{\numberline {3.7}{\ignorespaces The antiunification of the AUASTs of the logging calls in Examples 1 and 2.\relax }}{23}{figure.caption.25}
\contentsline {figure}{\numberline {3.8}{\ignorespaces The antiunification of the terms f(a, b) and nil(nil,b).\relax }}{24}{figure.caption.26}
\contentsline {figure}{\numberline {3.9}{\ignorespaces The antiunification of the structures \lstinline {for(initializer(i,=,0),expression(i,<,10), updater(i,++))} and \lstinline {while(nil(nil,nil,nil),expression(i,<,10), nil(nil,nil))}.\relax }}{25}{figure.caption.27}
\contentsline {figure}{\numberline {3.10}{\ignorespaces The antiunification of the terms $f(g(a,b), g(d,e))$ and $f(g(a,e))$ that creates multiple MSAs.\relax }}{26}{figure.caption.28}
\contentsline {figure}{\numberline {3.11}{\ignorespaces Simple CAST structure of examples in Figures\nobreakspace {}\ref {ch3-ex1} and\nobreakspace {}\ref {ch3-ex2}. The links between AST nodes indicate structural correspondence connections created by the Jigsaw framework along with the similarity value.\relax }}{28}{figure.caption.29}
\addvspace {10pt}
\contentsline {figure}{\numberline {4.1}{\ignorespaces Overview of the system.\relax }}{32}{figure.caption.30}
\contentsline {figure}{\numberline {4.2}{\ignorespaces The AUASTs of log Method Invocation nodes from the Java classes in Figure\nobreakspace {}\ref {ch3-ex1} and Figure\nobreakspace {}\ref {ch3-ex2}.\relax }}{34}{figure.caption.31}
\contentsline {figure}{\numberline {4.3}{\ignorespaces Simple AUAST structures constructed from the ASTs in Figure\nobreakspace {}\ref {fig:meth-ast-1}. Links between AUAST nodes indicate structural correspondences selected as the best fit\relax }}{38}{figure.caption.32}
\contentsline {figure}{\numberline {4.4}{\ignorespaces The antiunifier (AUAST3) constructed from log Method Invocation AUAST nodes in Figure\nobreakspace {}\ref {fig:constructAUast} \relax }}{43}{figure.caption.33}
\contentsline {figure}{\numberline {4.5}{\ignorespaces Simple antiunified AUAST structure of the two AUASTs in Figure\nobreakspace {}\ref {fig:AUASTs}\relax }}{44}{figure.caption.34}
\contentsline {figure}{\numberline {4.6}{\ignorespaces A Java class that utilizes multiple logging calls. This will be referred to as Example 1.\relax }}{45}{figure.caption.35}
\contentsline {figure}{\numberline {4.7}{\ignorespaces A Java class that utilizes multiple logging calls. This will be referred to as Example 2.\relax }}{45}{figure.caption.36}
\contentsline {figure}{\numberline {4.8}{\ignorespaces Simple AUAST structure of examples in Figures\nobreakspace {}\ref {multiple1} and\nobreakspace {}\ref {multiple2}. Links between AUAST nodes indicate potential candidate structural correspondences detected by the Jigsaw framework.\relax }}{46}{figure.caption.37}
\contentsline {figure}{\numberline {4.9}{\ignorespaces Simple AUAST structure of examples in Figures\nobreakspace {}\ref {multiple1} and\nobreakspace {}\ref {multiple2}. Links between AUAST nodes indicate structural correspondences selected as the best match using our greedy algorithm.\relax }}{47}{figure.caption.38}
\contentsline {figure}{\numberline {4.10}{\ignorespaces Create multiple copies of Example 1 for each logging call.\relax }}{48}{figure.caption.39}
\contentsline {figure}{\numberline {4.11}{\ignorespaces Create multiple copies of Example 2 for each logging call.\relax }}{49}{figure.caption.40}
\contentsline {figure}{\numberline {4.12}{\ignorespaces Antiunification of 4 AUAST nodes using an agglomerative hierarchical clustering algorithm. The threshold value indicates the number of clusters we will come up with.\relax }}{50}{figure.caption.41}
\addvspace {10pt}
\addvspace {10pt}
\addvspace {10pt}
\addvspace {10pt}
